from prepare import Cell
from prepare import Grid
from prepare import Markup
import random
def map1(): # 上下跳
    big_map = False
    g = Grid(20,20)
    markup = Markup(g)
    start = g.cell_at(2,2)
    goal = g.cell_at(18,18)

    col = 2
    for i in range(2):
        col += i * 8
        for j in range(19,7,-1):
            markup.set_item_at(j,col,'*')
    col = 6
    for i in range(2):
        col += i * 8
        for j in range(14):
            markup.set_item_at(j,col,'*')

     #mark start, goal
    markup.set_item_at(start.row,start.column,'!')
    markup.set_item_at(goal.row,goal.column,'!')

    return start,goal,g,markup,big_map

def map2(): #斜穿
    big_map = False
    g = Grid(20,20)
    markup = Markup(g)
    start = g.cell_at(3,3)
    goal = g.cell_at(17,17)

    for i in range(3):
        row,col=5+3*i,5+3*i
        for j in range(1,6):
            markup.set_item_at(row,col+j,'*')
            markup.set_item_at(row+j,col,'*')

     #mark start, goal
    markup.set_item_at(start.row,start.column,'!')
    markup.set_item_at(goal.row,goal.column,'!')

    return start,goal,g,markup,big_map

def map3():
    big_map = False
    g = Grid(20,20)
    markup = Markup(g)
    start = g.cell_at(4,4)
    goal = g.cell_at(17,17)

     # mark the obstacle
    i = 18
    j = 1
    while i>=1 and j<=18:
        markup.set_item_at(i,j,'*')
        i-=1
        j+=1

    p = 18
    q = 2
    while p>=2 and q <= 18:
        markup.set_item_at(p,q,'*')
        p-=1
        q+=1

     #mark start, goal
    markup.set_item_at(start.row,start.column,'!')
    markup.set_item_at(goal.row,goal.column,'!')

    return start,goal,g,markup,big_map

def map4(): # 随机生成的地图
    big_map = False
    g = Grid(20,20)
    markup = Markup(g)
    start = g.cell_at(0,0)
    goal = g.cell_at(19,19)

    set_obs = [(3, 16), (19, 15), (15, 9), (10, 9), (15, 3), (2, 6), (3, 0), (5, 15), (13, 18), (2, 19), (0, 2), (17, 10), (9, 7), (6, 1), (3, 7), (10, 16), (3, 17), (8, 12), (8, 10), (0, 3), (18, 14), (11, 6), (12, 5), (1, 17), (16, 16), (10, 2), (4, 6), (5, 6), (9, 8), (16, 10), (10, 11), (5, 8), (19, 19), (2, 14), (17, 2), (10, 10), (2, 12), (1, 11), (18, 9), (14, 9), (12, 16), (2, 15), (5, 7), (7, 19), (2, 4), (5, 16), (10, 12), (10, 7), (17, 9), (14, 17), (12, 3), (9, 6), (16, 0), (10, 0), (1, 3), (12, 6), (2, 5), (14, 0), (12, 9), (0, 1), (16, 7), (8, 13), (6, 3), (3, 8), (11, 1), (9, 9), (2, 8), (17, 12), (5, 17), (0, 15), (13, 16), (0, 11), (8, 19), (7, 12), (0, 5), (17, 18), (10, 19), (8, 11), (18, 4), (17, 16), (14, 13), (1, 1), (1, 5), (12, 17), (16, 15), (9, 4), (13, 11), (5, 18), (7, 7), (15, 18), (18, 1), (0, 14), (6, 16), (13, 19), (9, 19), (8, 4), (7, 3), (12, 2), (15, 5), (15, 13), (7, 14), (1, 6), (3, 11), (4, 0), (1, 9), (8, 7), (10, 5), (17, 1), (15, 11), (7, 2), (15, 14), (13, 2), (13, 12), (4, 15), (18, 11), (4, 4), (19, 0), (1, 15), (19, 8), (15, 6), (15, 1), (12, 7), (19, 10), (2, 3), (14, 19), (2, 17), (18, 15), (16, 6), (3, 10), (3, 4)]
    for i in range(len(set_obs)):
        markup.set_item_at(set_obs[i][0], set_obs[i][1], '*')

    # mark start, goal
    markup.set_item_at(start.row, start.column, '!')
    markup.set_item_at(goal.row, goal.column, '!')

    return start,goal,g,markup,big_map


def map5():  # 小图，只有一条路径，其他全是obs,测试哪种走得更快
    big_map = False
    g = Grid(20, 20)
    markup = Markup(g)
    start = g.cell_at(4, 3)
    goal = g.cell_at(6, 3)

    # mark the obstacle
    for i in range(0, 20):
        for j in range(0, 20):
            markup.set_item_at(i, j, '*')
    path = [(2, 3), (3, 3), (3, 4), (3, 5), (2, 5), (3, 6), (3, 7), (2, 7), (3, 8), (3, 9), (3, 10), (3, 11), (3, 12),
            (3, 13),
            (2, 9), (2, 11), (2, 13), (3, 14), (4, 14), (5, 14), (6, 14), (7, 14), (8, 14), (9, 14), (4, 15), (6, 15),
            (8, 15),
            (10, 14), (10, 15), (11, 14), (11, 13), (12, 13), (12, 12), (13, 12), (13, 11), (14, 11), (14, 10), (14, 9),
            (15, 9),
            (14, 8), (14, 7), (15, 7), (14, 6), (14, 5), (15, 5), (13, 5), (13, 4), (12, 4), (12, 3), (11, 3), (11, 2),
            (10, 2), (10, 1), (9, 2), (8, 2),
            (8, 1), (7, 2), (6, 2), (6, 1)]
    for p in path:
        markup.set_item_at(p[0]+1, p[1]+1, '')

    # mark start, goal
    markup.set_item_at(start.row, start.column, '!')
    markup.set_item_at(goal.row, goal.column, '!')

    return start, goal, g, markup, big_map

def map6(): #空地图
    big_map = True
    g = Grid(50,50)
    markup = Markup(g)
    start = g.cell_at(2,2)
    goal = g.cell_at(47,47)
    # mark start, goal
    markup.set_item_at(start.row, start.column, '!')
    markup.set_item_at(goal.row, goal.column, '!')
    return start,goal,g,markup,big_map


def map7(): # 多subgoal
    big_map = True
    g = Grid(50,50)
    markup = Markup(g)
    start = g.cell_at(2,45)
    goal = g.cell_at(46,47)


    for i in range(28,32):
        for j in range(17,38):
            markup.set_item_at(i, j, '*')
    for i in range(10,21):
        for j in range(49,29,-1):
            markup.set_item_at(i,j,'*')
    for i in range(4):
        col = 29+i*6
        markup.set_item_at(9,col,'*')
    for i in range(4):
        col = 29+i*6
        markup.set_item_at(21,col,'*')
    for i in range(3):
        row = 9+i*6
        markup.set_item_at(row,29,'*')
    for i in range(40,50):
        for j in range(10):
            markup.set_item_at(i,j,'*')
    for i in range(6,12):
        for j in range(6,12):
            markup.set_item_at(i,j,'*')
    for i in range(7):
        col = 2+i*6
        markup.set_item_at(0, col, '*')
        markup.set_item_at(0, col+1, '*')
    for i in range(6):
        row = 2+i*6
        markup.set_item_at(row, 0, '*')
        markup.set_item_at(row+1, 0, '*')
    for i in range(6):
        col = 14+i*6
        markup.set_item_at(49, col, '*')
        markup.set_item_at(49, col+1, '*')

    
     #mark start, goal
    markup.set_item_at(start.row,start.column,'!')
    markup.set_item_at(goal.row,goal.column,'!')

    return start,goal,g,markup,big_map

def map8(): # 500个随机obstacles
    big_map = True
    g = Grid(50,50)
    markup = Markup(g)
    start = g.cell_at(11,2)
    goal = g.cell_at(36,40)
     #mark start, goal
    markup.set_item_at(start.row,start.column,'!')
    markup.set_item_at(goal.row,goal.column,'!')

    set_obs = [(41, 36), (44, 40), (5, 45), (33, 46), (23, 41), (31, 10), (10, 6), (40, 35), (6, 34), (35, 22), (45, 35), (8, 40), (19, 2), (7, 22), (24, 13), (45, 6), (26, 13), (27, 20), (36, 44), (48, 43), (5, 43), (22, 4), (0, 25), (29, 24), (18, 8), (25, 6), (19, 29), (13, 10), (36, 16), (42, 9), (44, 48), (17, 13), (2, 39), (32, 7), (7, 49), (24, 31), (25, 43), (27, 25), (47, 2), (9, 16), (11, 19), (24, 34), (49, 10), (20, 18), (6, 37), (28, 11), (30, 45), (47, 21), (22, 32), (18, 10), (28, 17), (47, 8), (2, 9), (24, 20), (35, 1), (19, 48), (3, 14), (43, 29), (11, 22), (40, 3), (9, 31), (15, 13), (22, 28), (25, 30), (24, 29), (37, 10), (4, 41), (45, 39), (9, 46), (43, 21), (2, 30), (12, 20), (43, 3), (15, 18), (6, 15), (37, 6), (39, 10), (31, 19), (4, 8), (19, 34), (19, 18), (5, 48), (14, 47), (14, 43), (18, 19), (31, 24), (8, 27), (22, 31), (42, 36), (30, 30), (23, 32), (33, 25), (24, 11), (14, 14), (15, 21), (19, 32), (41, 30), (38, 17), (33, 9), (33, 24), (21, 3), (48, 6), (18, 27), (14, 41), (19, 6), (34, 30), (28, 22), (13, 35), (44, 25), (33, 19), (6, 47), (5, 16), (33, 26), (36, 15), (36, 4), (32, 6), (3, 28), (18, 2), (28, 2), (30, 16), (33, 6), (7, 7), (18, 44), (0, 5), (48, 11), (27, 40), (32, 14), (39, 21), (21, 11), (36, 10), (38, 40), (47, 18), (25, 38), (33, 23), (21, 47), (38, 48), (10, 34), (12, 15), (41, 45), (2, 40), (43, 24), (0, 0), (45, 20), (34, 35), (2, 32), (39, 13), (2, 26), (12, 5), (37, 7), (4, 6), (10, 29), (11, 24), (25, 2), (46, 29), (45, 23), (24, 28), (28, 29), (4, 17), (27, 39), (26, 33), (40, 21), (0, 4), (17, 7), (15, 35), (38, 34), (26, 24), (1, 21), (3, 17), (22, 35), (40, 37), (5, 6), (10, 37), (1, 13), (13, 28), (34, 4), (7, 20), (1, 16), (2, 33), (39, 38), (5, 33), (3, 40), (37, 42), (6, 20), (13, 29), (22, 20), (33, 38), (23, 35), (0, 15), (9, 29), (45, 2), (16, 14), (15, 17), (33, 31), (33, 32), (41, 27), (49, 5), (7, 35), (40, 6), (6, 46), (40, 4), (38, 37), (33, 41), (9, 13), (47, 20), (1, 24), (44, 8), (1, 33), (0, 34), (12, 47), (2, 14), (13, 5), (41, 25), (30, 33), (47, 48), (17, 34), (32, 22), (21, 23), (13, 15), (26, 36), (36, 39), (33, 20), (18, 34), (35, 37), (36, 11), (6, 3), (16, 48), (35, 47), (31, 39), (11, 44), (42, 22), (36, 14), (43, 15), (20, 16), (40, 27), (38, 35), (23, 40), (40, 5), (45, 49), (47, 36), (10, 1), (33, 48), (48, 29), (33, 10), (27, 31), (14, 30), (43, 6), (11, 16), (1, 12), (5, 15), (45, 14), (22, 8), (39, 45), (46, 5), (37, 45), (11, 34), (49, 42), (41, 6), (26, 27), (17, 2), (21, 39), (2, 46), (47, 11), (47, 3), (22, 23), (22, 45), (10, 5), (24, 22), (42, 31), (6, 41), (20, 24), (45, 9), (19, 5), (10, 0), (26, 17), (41, 19), (39, 19), (8, 26), (36, 47), (42, 41), (34, 11), (4, 3), (28, 9), (27, 22), (27, 10), (48, 20), (38, 10), (42, 4), (33, 37), (15, 43), (18, 31), (29, 49), (21, 45), (34, 34), (29, 21), (18, 16), (0, 30), (42, 6), (42, 43), (10, 30), (42, 2), (3, 45), (11, 15), (48, 13), (23, 39), (40, 40), (27, 36), (32, 49), (38, 14), (39, 35), (41, 26), (16, 45), (17, 32), (23, 19), (16, 4), (18, 25), (25, 7), (17, 36), (2, 45), (33, 39), (8, 17), (19, 26), (12, 36), (33, 7), (44, 5), (36, 35), (3, 20), (6, 33), (17, 6), (42, 10), (4, 33), (13, 49), (15, 42), (17, 27), (30, 46), (47, 16), (41, 33), (14, 23), (11, 43), (39, 33), (12, 25), (6, 17), (10, 23), (19, 37), (23, 46), (1, 42), (13, 24), (46, 38), (15, 27), (38, 49), (5, 32), (28, 43), (29, 43), (18, 41), (34, 7), (39, 14), (26, 32), (9, 24), (11, 4), (18, 5), (29, 12), (16, 0), (9, 45), (14, 49), (25, 28), (14, 26), (39, 30), (7, 9), (44, 37), (12, 46), (43, 33), (29, 9), (31, 18), (37, 15), (6, 5), (10, 46), (8, 11), (4, 2), (27, 6), (21, 1), (24, 25), (9, 42), (37, 17), (9, 17), (5, 19), (14, 7), (20, 33), (41, 16), (45, 38), (28, 18), (45, 15), (0, 38), (10, 10), (28, 13), (5, 39), (27, 1), (28, 49), (8, 43), (11, 37), (46, 37), (30, 1), (35, 33), (5, 29), (8, 30), (7, 39), (3, 41), (5, 14), (13, 11), (32, 9), (46, 23), (28, 14), (39, 4), (37, 30), (46, 17), (41, 18), (45, 19), (15, 4), (22, 15), (2, 28), (41, 5), (40, 44), (18, 15), (28, 3), (10, 24), (48, 21), (19, 39), (31, 14), (47, 28), (48, 25), (8, 42), (16, 38), (13, 44), (0, 18), (4, 32), (8, 38), (4, 48), (24, 40), (11, 7), (31, 47), (0, 37), (26, 4), (31, 34), (8, 15), (20, 19), (15, 16), (25, 8), (40, 41), (7, 28), (25, 36), (35, 31), (15, 40), (3, 32), (49, 14), (37, 35), (43, 38), (23, 30), (2, 10), (49, 33), (13, 38), (37, 27), (12, 41), (34, 36), (30, 26), (19, 15), (44, 23), (26, 15), (35, 10), (2, 11), (13, 25), (13, 46), (32, 5), (5, 17), (40, 34), (23, 28), (43, 16), (3, 18), (17, 35), (47, 24), (8, 3), (41, 49), (41, 28), (42, 13), (35, 11), (7, 42), (32, 38), (7, 32), (49, 26), (28, 32), (31, 32), (27, 16), (49, 8), (32, 35), (13, 47), (49, 23), (5, 2), (21, 6), (8, 28), (7, 48), (1, 6), (21, 21), (47, 34)]

    for i in range(len(set_obs)):
        markup.set_item_at(set_obs[i][0], set_obs[i][1], '*')

    return start,goal,g,markup,big_map









    
    
